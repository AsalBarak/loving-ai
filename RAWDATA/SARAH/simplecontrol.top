
# this function is executed once for every new user chatting with harry
outputmacro: harry()  # you get harry by default
$cs_token = #DO_INTERJECTION_SPLITTING  | #DO_SUBSTITUTE_SYSTEM   | #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE  | #DO_SPELLCHECK  | #DO_PARSE 

$version = surprise

# turn on/off accidental topic entry blocking
# $blocking = null
 $blocking = 1

# PAUSE time amounts
$veryshort = 2000
$short = 5000
$medshort = 7000
$med = 10000
$medlong = 15000
$long = 20000
$verylong = 30000
$superlong = 60000

^addtopic(~introductions)
$cs_control_main = ~control
#  $cs_control_post = ~XPOSTPROCESS  # uncomment to enable talk
$userprompt = ^"%user: >"
$botprompt = ^"SARAH: "

table: defaultbot (^name)
^createfact(^name defaultbot defaultbot)
DATA:
harry

topic: ~control system ()

#! resetmenow to reset the conversational history of the user
u: (< resetmenow >) ^reset(USER)
u: (whatversion) $version

u: (< jumpto _*)
	 ^refine()
		a: (body) ^goto(~body_exercise)
		a: () ^goto('_0)









# u: () %command
# u: (%command *gambit*) %inputrejoinder = null Woohoo!!! ^retry (SENTENCE)
# u: (%topic) yougotit  yougotit
# u: (*) original input: %originalinput ^retry (SENTENCE)

# on startup, do introduction
u: ( %input<%userfirstline) 
	gambit(~introductions)

u: (< shut up >) $shutup = 1
u: (< talk  >) $shutup = null

# u: (\[ callback \]) Callback seen.
u: (\[ callback \]) # ^gambit($domain)
u: (\[ loopback \]) Loopback seen.
u: (\[ alarm \]) Alarm seen.
u: (< loopback test) \[ loopback=1000 \] Loopback requested.
u: (< callback test) \[ callback=1000 \] Callback requested.
u: (< alarm test) \[ alarm=5000 \] Alarm requested.

u: () # main per-sentence processing

	$$currenttopic = %topic		# get the current topic at start of volley

	if ( %response == 0 ) {nofail(TOPIC ^rejoinder())}	# try for rejoinders. might generate an answer directly from what we are looking for.

	if (%length == 0 AND %response == 0 )
	{
		nofail(TOPIC ^gambit($$currenttopic))  # gambit current topic since no input (usually start of conversation)
	}

	if (%response == 0) { nofail(TOPIC ^respond($$currenttopic)) } # current topic tries to respond to his input

	if (%response == 0) # see if some other topic has keywords matching his input (given we have no response yet)
	{
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
			nofail(TOPIC ^respond($$topic))
			if (%response != 0) # stop when we find something to say
			{
				^end(RULE)	# we are done, this terminates the loop (not the rule)
			}
		}
	}	


	# having no good response we know, now generate quibbles

	# now we need to find fake responses 
	if (%response == 0 AND %rand > 50)
	{
		nofail(TOPIC respond(~QUIBBLE_ALL))
	}

	# if we have rejoinders for what we said OR we asked a question, stop here
	if (%outputrejoinder OR %lastquestion) 
	{
		end(TOPIC)
	}


	if (%response == 0 AND ^marked($$currenttopic)) { nofail(TOPIC ^gambit($$currenttopic)) } # gambit current topic since keywords match current topic

	# customization: Go back to our pending topics beyond just the current topic
	if ($herweare==null and %response == 0) { ^nofail (TOPIC ^gambit(pending) } # here or perhaps further above

	if (%response == 0) # gambit from ANY matching topic
	{
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
			nofail(TOPIC ^Gambit($$topic))	# gambit in best matching topic
			if (%response != 0) # stop when we find something
			{
				^end(RULE)
			}
		}
	}
	if (%response == 0){ nofail(TOPIC ^gambit($$currenttopic)) } # gambit from current topic even though no keywords matched

	if (%response == 0)
	{ 
		@8 = ^GambitTopics()		# all topics with gambits (excluding system topics)
		loop()
		{
			$$topic = pick(@8subject)
			nofail(TOPIC ^Gambit($$topic))	# try a topic at random
			if (%response != 0)
			{
				^end(RULE)
			}
		}
	}
	
	if (%response == 0) 
	{
		 ^repeat() 
		 I don't know what to say. 
	}


topic: ~XPOSTPROCESS system () # gambits only - not allowed to write to  output - generates speech on windows -- for Linux you'd want to install Festival (or equivalent) and call that instead.

t: (^query(direct_v ? chatoutput ? -1 ? @9  ))  # get the sentences  (why is the object) -- no longer has quotes around it
	loop()
	{
		$$tmp = ^last(@9subject) # note last output which is quoted string
		if (!%server AND %os == windows  AND !$SHUTUP)
		{
			$$tmp = ^"talk \"$$tmp\" "
			popen($$tmp null)
		}
	}

# TODO move these to a functions file?
# topic: ~functions system ()
#u: RESET (reset) :reset resetting!

outputmacro: ^pause(^ms)
  \[ ^join(callback= ^ms) \]


# ^goto(^topic)
# adds ^addTopic for topics that block accidental access
# actually now i'm wondering if this might not be needed if the topic does not have keywords
outputmacro: ^goto(^topic)
	# == going to ^topic ==
	^addTopic(^topic)
	^gambit(^topic)

# dev macro to jump to topic, but clear rejoinder first
outputmacro: ^g(^topic)
	# ^goto(~clearRej)
	# %inputrejoinder = null # doesn't reset the var
	# ^setrejoinder(input null)
	# ^setrejoinder(output null)
	# ^disable(inputrejoinder)  # this doesn't seem to be working
 	^disable(outputrejoinder)

	^goto(^topic)

 	# if (^topic == ~body_exercise) { setrejoinder(input ~body_exercise.1.2) }


topic: ~clearRej system keep []
t: (!~) ^fail(topic)
t: () $nothing = nothing .

# ^continue_after_pause()
# continues to next gambit after user says anything or after pause timeout
# doesn't work, ^setRejoinder() is failing
outputmacro: ^continue_after_pause()
{
	# a: (*) ^gambit(~)
	^setRejoinder(Pause_Continue.CONTINUE_AFTER_PAUSE)
}

# for use with ^cointinue_after_pause()
topic: ~PauseContinue []
t: (!~) ^fail(topic) # block topic from accidental access
t: ()
	a: CONTINUE_AFTER_PAUSE (*) ^gambit(~)






